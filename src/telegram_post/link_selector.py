"""–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–∏—Ä–∂–∏ –∏ –≤—ã–±–æ—Ä –ø—Ä–æ–º–æ-—Å—Å—ã–ª–æ–∫."""

from __future__ import annotations

import re
from typing import Optional


EXCHANGE_LINKS = {
    "okx": (
        "\n\n"
        "üíº OKX –¥–ª—è –Ω–æ–≤—ã—Ö —Ç—Ä–µ–π–¥–µ—Ä–æ–≤:\n"
        "‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: https://www.okx.com/join/your_ref\n"
        "‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ iOS: https://apps.apple.com/app/okx/id1327268470\n"
        "‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Android: https://play.google.com/store/apps/details?id=com.okinc.okex.gp\n"
    ),
    "binance": (
        "\n\n"
        "üíº Binance ‚Äî —Ç–æ–ø–æ–≤–∞—è –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å:\n"
        "‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: https://accounts.binance.com/register?ref=YOURCODE\n"
        "‚Ä¢ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ Web: https://www.binance.com\n"
        "‚Ä¢ –ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: https://www.binance.com/en/download\n"
    ),
}

KEYWORDS = {
    "okx": (r"\bokx\b", r"\b–æ–∫—Ö\b"),
    "binance": (r"\bbinance\b", r"\b–±–∏–Ω–∞–Ω—Å\b"),
}


def detect_exchange(text: str) -> Optional[str]:
    """–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –±–∏—Ä–∂—É –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º."""

    normalized = text.lower()
    for exchange, patterns in KEYWORDS.items():
        if any(re.search(pattern, normalized) for pattern in patterns):
            return exchange
    return None


def append_links(text: str) -> str:
    """–î–æ–±–∞–≤–∏—Ç—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –±–ª–æ–∫ —Å—Å—ã–ª–æ–∫ –∫ —Ç–µ–∫—Å—Ç—É."""

    exchange = detect_exchange(text)
    if not exchange:
        return text

    return text.rstrip() + EXCHANGE_LINKS[exchange]
